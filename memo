setting
debuger

내용물 html
스타일 css
제어 js

브라우져는 어떻게 동작하는가
10년전에 나온 글

사용자 인터페이스
버튼, 텍스트창

브라우저저 엔진

렌더링 엔진 ->통신, 자바스크립트 해석기, ui 백엔드

브라우저 전쟁

전송된 데이터를 브라우저가 처리해서 보여 줌

2009년도 ie(internet explorer)

모자이크 브라우저 : 최초의 브라우저

마크업 렝귀지 : 텍스트를 어떻게 표현해 줄는지에 대한 지시

책이름, 저자, 책이름, 저자, 책이름, 저자, 책이름, 저자, 책이름, 저자, 책이름, 저자,

evolution of web

랜더링 엔진:

자바스크립트 엔진: V8

node js: 자바스크립트 엔진으로 설계

동작 : 문서의 내용은 보통 8KB 단위로 전송된다.

DOM 트리 구축위한 HTML 파싱

DOM : Document Object Model

css : castating style

브라우저: 싱글 쓰레드 모델

하드웨어 : 멀티코어,

코어 : 일꾼의 갯수

싱글 코어 : 한번에 한가지 작업 밖에 못함


css에서 처리
<style>
</style>

js가 처리 /
<script>
</script>

브라우저 환경에서는: 윈도우, 도큐먼트가 제공됨
api ->
window : 창 제어, 앞으로 가기, 뒤로 가기
document: 문서를 내용을 조종
통신



api : 면접 질문
api : 이미 만들어 진것
node js는 브라우저에서 동작하지 않음



강남 쪽에 있는 회사는 돈이 있음
판교, 상암, 여의도

구로디지털단지 개발자로서 별로 안 좋음, 처우가 별로 안 좋음

HTML5
브라우저가 욕심을 냄, 모든것을 다 할 수 있음
채팅, 음악, 동영상 재생,
RTC real time communication

플랫폼
배민, 유투브, 카카오,
당근: 광고 수익이 많음

플랫폼:

WEB 2.0
구글맵: 화면이 바뀌지 않고 새로운 부분이 나타나고 채워짐
타일: 지도의 조각
화면은 가만히 있고 새로운 부분이 채워짐

레고 제태크 수단으로 유용

your mother's age js
now js

html 코더

웹디자이너
액션 스크립트 ->플래시 코딩

디자인 시안 ->html 코드 생산 -
>서버 사이드 프로그래밍 ->jsp, asp, php(서버 사이드 랜더링) ->브라우저

jsp hello world

자바 서버사이드 프로그래밍
php, jsp, flask, node js, asp

2010년까지 서버사이드 개발자
jsp 단순한

아이폰:
모바일 화면의 크기가 달라짐
서버가 피곤해지지 시작함
왜? 다양한 화면 크기의 디바이스로부터의 요청이 들어오기 시작함

앱 등장
크롬 , 모바일 크롬 같지 않음
서버에서는
앱에 맞는 데이터, 웹에 맞는 데이터 만 보내줌
앱에 html 데이터를 보내주면 안됨
json :

브라우저 -> 서버
앱 -> 서버


11번가 11번가 거리를 겆는 느낌으로 3D 샵을 구현하고 싶었음
붕붕드링크
json : 서버에서 전달되는 데이터 형태중에 하나
예 ) xml, json

이제는 서버에서 xml, json 이런 데이터만 보내기 시작 함. 웹도 이런 데이터 처리 필요

js
angular, vue js, react, todo,

웹으로 다 만들어 놔서 앱으로 서비스 하고 싶어 함.

도미노 피자

스마트 폰 / 앱 / 웹 -> 하이브리드 웹

웹스톰: 코르도바 하이브리드 앱

react native : 안드로이드, ios 둘다 앱에서 동작 가능
flutter : dart 언어사용, js python 사용


요즘 서버사이드 /백앤드 : 데이터를 주고 받는 서버를 개발
xml. json
->DB가 중요함, 아키택터가 중요함, 클라우드(aws)
나라에서도 만듬
기업에서도 만듬 : 카카오, 네이버, 구글

이 서비스가 안정적으로 돌아 갈려면 어떤걸 사용해야 하나
프론트 앤드 개발자 : 이전엔 html 코더 -> ???
백엔드 개발자: 데이터를 저장, 전송, 아키텍쳐, 클라우드에 대해서 고민함

개인적인 의견: 남들과 다른 점이 있어야 함. 프론트와 관련된 프로젝트도 할줄 알아야
기업 입장에서 다 만질줄 알아야 좋아 함.
프로젝트시 프론트/백엔드 나눠서 하면 안됨, 개개인이 다 다룰줄 알아야 함.
풀스택

브라우저에서 js로 하는 일

DOM -> HTML 태그 ->메모리 상 -> 처리 -> CRUD
태그를 객체로 봄 -> 메모리 상에 객체로 차지함

더보기 : 데이터를 추가를 불러와 노출

이벤트 처리 -> 클릭/ 드레그
window 제어
html 5 기능

요즘 브라우저는 gpu 사용 가능

music can be fun

html5 canvas

html5 game

dome engjin 서울
js engine 부산
-> 거리가 멈
스크립트 태그를 js 엔진에 전달

->스크립트 태그를 쪼개는 것도 중요함
함수 선언과 호출이 같은 태그 안에 있어야 함. (x)
다른 태그에 나뉘어져 있어요 함수가 먼저 선언되고
나중에 호출이 되면 실행이 됨.

컨텍스트
어떤 페이지를 열면 윈도우라는 공간이 생김
다른 페이지로 이동하면 윈도우 공간을 지워버림
스크립트 안에 doA 함수는 윈도우 공간 일부를 사용함

브라우저 별로 동작에 차이가 있음

함수: 윈도우 메모리 강간에 달라 붙어 있음

변수:
var로 처리 하면 윈도우에 붙음
메모리를 고려한다면 가능하면 var를 안쓰는게 좋음 /
const, let로 하면 윈도우에 붙지 않음

변수 사용시 let이나 const만 사용해라

스크립트 태그 가능한 합쳐서 쓰는게 좋다.

스크립트 태그 문사상에 어디에 위치하는 게 좋은가?
가능한 아래에 위치하는 게 좋음
가능한 화면 출력을 빨리 하기 위해서
dom 엔진 ->js 엔진

document는 get으로 시작하는게 많음
const nick = document.getElementById("nick")

스크립트가 실행되기 전에 DOM이 실행되어 야 함.

운용중인 상업 사이트의 스크립트 태그가 위에 있는 이유

DOM 처리가 다 끝나면 로직을 수행

DOM 위에 있어도

콜백 함수
이벤트 처리리

css 탬플릿
부트 스트랩
머터리얼 디자인, 구글이 만듬. 리엑트와 붙음

버튼

css 기원 워드

js 외부 파일 장점

2. 캐시화 될 경우, 문서 로딩 더 쁠게 할 수 있음

브라우져 가장 최신에 업데이트한 js 파일을 반영이 안되는 이유는
브라우져가 js파일을 가져오지 않기 때문에 왜냐? 화면상에 바꿀게 없으면 다른 작업을 수행을 안함
이럴 경우 검사->네트워크->js 파일 -> js 파일 클리어

js 이벤트 처리

콜백 함수 / 이벤트 리스너/ 이벤트 처리기
콜백 함수 등록하기( 콜백을 받는 방법, 조건?)

이벤트도 객체

브라우져가 계속 모니터링 사용자가 버튼을 클릭 했는지 / 안했는지

js 파라미터로 함수 전달 가능

html code = DOM


1. =>{}
2. ,function()
3. , doA

function doA 만들면 등록 됨